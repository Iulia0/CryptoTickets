{
  "contractName": "PriceOracle",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "ETHUSDSTRING",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "LogUpdate",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updatePrice",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405233600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff1631600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fd176e7c6abd789c341ab22cef27aa1fbc7461f5f9d6a6e55faa0b9df32a7051460405160405180910390a373e2b2c6e4e5e23b0132dc35ec7e3f763a7c2098fe6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118f2806101256000396000f30060806040526004361061006c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680624934521461007157806312065fe01461010157806327dc297e1461012c57806338bbfa50146101a3578063673a7e2814610260575b600080fd5b34801561007d57600080fd5b5061008661026a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100c65780820151818401526020810190506100ab565b50505050905090810190601f1680156100f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561010d57600080fd5b50610116610308565b6040518082815260200191505060405180910390f35b34801561013857600080fd5b506101a16004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610327565b005b3480156101af57600080fd5b5061025e6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061041f565b005b610268610424565b005b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b505050505081565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b61032f61068c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561036857600080fd5b806006908051906020019061037e929190611821565b507f71f1a5645e51a2da828ffcf79cc17da88eb25e1bca8b9dced23210847a4769c1816040518080602001828103825283818151815260200191508051906020019080838360005b838110156103e15780820151818401526020810190506103c6565b50505050905090810190601f16801561040e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b505050565b3073ffffffffffffffffffffffffffffffffffffffff163161047a6040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506109ea565b1115610539577f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e60405180806020018281038252604b8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656500000000000000000000000000000000000000000081525060600191505060405180910390a161068a565b7f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16106886040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604181526020017f6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f763281526020017f2f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e81526020017f7400000000000000000000000000000000000000000000000000000000000000815250610dba565b505b565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806106fc575060006106fa6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661135c565b145b1561070d5761070b6000611367565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561079257600080fd5b505af11580156107a6573d6000803e3d6000fd5b505050506040513d60208110156107bc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610924576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108a857600080fd5b505af11580156108bc573d6000803e3d6000fd5b505050506040513d60208110156108d257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156109aa57600080fd5b505af11580156109be573d6000803e3d6000fd5b505050506040513d60208110156109d457600080fd5b8101908080519060200190929190505050905090565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610a5a57506000610a586000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661135c565b145b15610a6b57610a696000611367565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610af057600080fd5b505af1158015610b04573d6000803e3d6000fd5b505050506040513d6020811015610b1a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610c82576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c0657600080fd5b505af1158015610c1a573d6000803e3d6000fd5b505050506040513d6020811015610c3057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d2c578082015181840152602081019050610d11565b50505050905090810190601f168015610d595780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610d7857600080fd5b505af1158015610d8c573d6000803e3d6000fd5b505050506040513d6020811015610da257600080fd5b81019080805190602001909291905050509050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610e2c57506000610e2a6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661135c565b145b15610e3d57610e3b6000611367565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ec257600080fd5b505af1158015610ed6573d6000803e3d6000fd5b505050506040513d6020811015610eec57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611054576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610fd857600080fd5b505af1158015610fec573d6000803e3d6000fd5b505050506040513d602081101561100257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156110fe5780820151818401526020810190506110e3565b50505050905090810190601f16801561112b5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b505050506040513d602081101561117457600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156111aa5760006001029150611355565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611262578082015181840152602081019050611247565b50505050905090810190601f16801561128f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156112c85780820151818401526020810190506112ad565b50505050905090810190601f1680156112f55780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561131657600080fd5b505af115801561132a573d6000803e3d6000fd5b50505050506040513d602081101561134157600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b6000611371611378565b9050919050565b600080611398731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61135c565b111561143957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114306040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611807565b60019050611804565b600061145873c03a2615d5efaf5f49f60b7bb6583eaec212fdf161135c565b11156114f95773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114f06040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611807565b60019050611804565b600061151873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61135c565b11156115b95773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115b06040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611807565b60019050611804565b60006115d873146500cfd35b22e4a392fe0adc06de1a1368ed4861135c565b11156116795773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116706040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611807565b60019050611804565b6000611698736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561135c565b11156116fb57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611804565b600061171a7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61135c565b111561177d577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611804565b600061179c7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61135c565b11156117ff577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611804565b600090505b90565b806002908051906020019061181d929190611821565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061186257805160ff1916838001178555611890565b82800160010185558215611890579182015b8281111561188f578251825591602001919060010190611874565b5b50905061189d91906118a1565b5090565b6118c391905b808211156118bf5760008160009055506001016118a7565b5090565b905600a165627a7a72305820de4e2ffc44b5d7a36696ab691363223655d067481832b2baad63205ac597d28d0029",
  "deployedBytecode": "0x60806040526004361061006c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680624934521461007157806312065fe01461010157806327dc297e1461012c57806338bbfa50146101a3578063673a7e2814610260575b600080fd5b34801561007d57600080fd5b5061008661026a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100c65780820151818401526020810190506100ab565b50505050905090810190601f1680156100f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561010d57600080fd5b50610116610308565b6040518082815260200191505060405180910390f35b34801561013857600080fd5b506101a16004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610327565b005b3480156101af57600080fd5b5061025e6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061041f565b005b610268610424565b005b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b505050505081565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b61032f61068c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561036857600080fd5b806006908051906020019061037e929190611821565b507f71f1a5645e51a2da828ffcf79cc17da88eb25e1bca8b9dced23210847a4769c1816040518080602001828103825283818151815260200191508051906020019080838360005b838110156103e15780820151818401526020810190506103c6565b50505050905090810190601f16801561040e5780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b505050565b3073ffffffffffffffffffffffffffffffffffffffff163161047a6040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506109ea565b1115610539577f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e60405180806020018281038252604b8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656500000000000000000000000000000000000000000081525060600191505060405180910390a161068a565b7f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16106886040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604181526020017f6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f763281526020017f2f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e81526020017f7400000000000000000000000000000000000000000000000000000000000000815250610dba565b505b565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806106fc575060006106fa6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661135c565b145b1561070d5761070b6000611367565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561079257600080fd5b505af11580156107a6573d6000803e3d6000fd5b505050506040513d60208110156107bc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610924576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108a857600080fd5b505af11580156108bc573d6000803e3d6000fd5b505050506040513d60208110156108d257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156109aa57600080fd5b505af11580156109be573d6000803e3d6000fd5b505050506040513d60208110156109d457600080fd5b8101908080519060200190929190505050905090565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610a5a57506000610a586000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661135c565b145b15610a6b57610a696000611367565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610af057600080fd5b505af1158015610b04573d6000803e3d6000fd5b505050506040513d6020811015610b1a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610c82576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610c0657600080fd5b505af1158015610c1a573d6000803e3d6000fd5b505050506040513d6020811015610c3057600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d2c578082015181840152602081019050610d11565b50505050905090810190601f168015610d595780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610d7857600080fd5b505af1158015610d8c573d6000803e3d6000fd5b505050506040513d6020811015610da257600080fd5b81019080805190602001909291905050509050919050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610e2c57506000610e2a6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661135c565b145b15610e3d57610e3b6000611367565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ec257600080fd5b505af1158015610ed6573d6000803e3d6000fd5b505050506040513d6020811015610eec57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611054576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610fd857600080fd5b505af1158015610fec573d6000803e3d6000fd5b505050506040513d602081101561100257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156110fe5780820151818401526020810190506110e3565b50505050905090810190601f16801561112b5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b505050506040513d602081101561117457600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156111aa5760006001029150611355565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611262578082015181840152602081019050611247565b50505050905090810190601f16801561128f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156112c85780820151818401526020810190506112ad565b50505050905090810190601f1680156112f55780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561131657600080fd5b505af115801561132a573d6000803e3d6000fd5b50505050506040513d602081101561134157600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b6000611371611378565b9050919050565b600080611398731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61135c565b111561143957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114306040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611807565b60019050611804565b600061145873c03a2615d5efaf5f49f60b7bb6583eaec212fdf161135c565b11156114f95773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114f06040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611807565b60019050611804565b600061151873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61135c565b11156115b95773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115b06040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611807565b60019050611804565b60006115d873146500cfd35b22e4a392fe0adc06de1a1368ed4861135c565b11156116795773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116706040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611807565b60019050611804565b6000611698736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561135c565b11156116fb57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611804565b600061171a7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61135c565b111561177d577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611804565b600061179c7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61135c565b11156117ff577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611804565b600090505b90565b806002908051906020019061181d929190611821565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061186257805160ff1916838001178555611890565b82800160010185558215611890579182015b8281111561188f578251825591602001919060010190611874565b5b50905061189d91906118a1565b5090565b6118c391905b808211156118bf5760008160009055506001016118a7565b5090565b905600a165627a7a72305820de4e2ffc44b5d7a36696ab691363223655d067481832b2baad63205ac597d28d0029",
  "sourceMap": "61:1380:2:-;;;392:10;384:5;;:18;;;;;;;;;;;;;;;;;;443:4;435:21;;;428:5;;;;;;;;;;;418:39;;;;;;;;;;;;496:42;468:3;;:71;;;;;;;;;;;;;;;;;;61:1380;;;;;;",
  "deployedSourceMap": "61:1380:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;126:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;126:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;126:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:102;;8:9:-1;5:2;;;30:1;27;20:12;5:2;813:102:2;;;;;;;;;;;;;;;;;;;;;;;583:222;;8:9:-1;5:2;;;30:1;27;20:12;5:2;583:222:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13889:153:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13889:153:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;975:461:2;;;;;;126:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;813:102::-;853:13;894:4;886:21;;;879:28;;813:102;:::o;583:222::-;660:20;:18;:20::i;:::-;646:34;;:10;:34;;;;642:48;;;682:8;;;642:48;716:6;701:12;:21;;;;;;;;;;;;:::i;:::-;;738:23;754:6;738:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;738:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;583:222;;:::o;13889:153:6:-;;;;:::o;975:461:2:-;1065:4;1057:21;;;1030:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;1026:403;;;1100:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:403;;;1236:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1327:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:90::i;:::-;;1026:403;975:461::o;34005:114:6:-;34065:7;11460:1;11454:3;;;;;;;;;;;11446:15;;;11445:49;;;;11492:1;11465:25;11485:3;;;;;;;;;;;11465:11;:25::i;:::-;:28;11445:49;11442:102;;;11509:35;11166:1;11509:19;:35::i;:::-;;11442:102;11581:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11581:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11581:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11581:16:6;;;;;;;;;;;;;;;;11560:37;;11568:8;;;;;;;;;;;11560:37;;;;11557:93;;;11633:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11633:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11633:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11633:16:6;;;;;;;;;;;;;;;;11612:8;;:38;;;;;;;;;;;;;;;;;;11557:93;34091:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34091:20:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34091:20:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;34091:20:6;;;;;;;;;;;;;;;;34084:27;;34005:114;:::o;14050:136::-;14126:4;11460:1;11454:3;;;;;;;;;;;11446:15;;;11445:49;;;;11492:1;11465:25;11485:3;;;;;;;;;;;11465:11;:25::i;:::-;:28;11445:49;11442:102;;;11509:35;11166:1;11509:19;:35::i;:::-;;11442:102;11581:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11581:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11581:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11581:16:6;;;;;;;;;;;;;;;;11560:37;;11568:8;;;;;;;;;;;11560:37;;;;11557:93;;;11633:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11633:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11633:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11633:16:6;;;;;;;;;;;;;;;;11612:8;;:38;;;;;;;;;;;;;;;;;;11557:93;14149:8;;;;;;;;;;;:17;;;14167:10;14149:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14149:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14149:29:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14149:29:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14149:29:6;;;;;;;;;;;;;;;;14142:36;;14050:136;;;:::o;14363:310::-;14448:10;14470;11460:1;11454:3;;;;;;;;;;;11446:15;;;11445:49;;;;11492:1;11465:25;11485:3;;;;;;;;;;;11465:11;:25::i;:::-;:28;11445:49;11442:102;;;11509:35;11166:1;11509:19;:35::i;:::-;;11442:102;11581:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11581:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11581:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11581:16:6;;;;;;;;;;;;;;;;11560:37;;11568:8;;;;;;;;;;;11560:37;;;;11557:93;;;11633:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11633:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11633:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11633:16:6;;;;;;;;;;;;;;;;11612:8;;:38;;;;;;;;;;;;;;;;;;11557:93;14483:8;;;;;;;;;;;:17;;;14501:10;14483:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14483:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14483:29:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14483:29:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14483:29:6;;;;;;;;;;;;;;;;14470:42;;14557:6;14545:11;:18;14535:7;:28;14527:5;:36;14523:50;;;14572:1;14565:8;;;;;;14523:50;14618:8;;;;;;;;;;;:14;;;14639:5;14646:1;14649:10;14661:3;14618:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14618:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14618:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14618:47:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14618:47:6;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14618:47:6;;;;;;;;;;;;;;;;14611:54;;11663:1;14363:310;;;;;:::o;34551:154::-;34613:10;34681:5;34669:18;34660:27;;34645:53;;;:::o;11783:190::-;11846:4;11869:21;:19;:21::i;:::-;11862:28;;11783:190;;;:::o;11979:1783::-;12027:4;12103:1;12047:55;12059:42;12047:11;:55::i;:::-;:57;12043:249;;;12158:42;12130:3;;:71;;;;;;;;;;;;;;;;;;12216:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12276:4;12269:11;;;;12043:249;12362:1;12306:55;12318:42;12306:11;:55::i;:::-;:57;12302:258;;;12425:42;12397:3;;:71;;;;;;;;;;;;;;;;;;12483:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;12544:4;12537:11;;;;12302:258;12630:1;12574:55;12586:42;12574:11;:55::i;:::-;:57;12570:253;;;12691:42;12663:3;;:71;;;;;;;;;;;;;;;;;;12749:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;12807:4;12800:11;;;;12570:253;12893:1;12837:55;12849:42;12837:11;:55::i;:::-;:57;12833:257;;;12956:42;12928:3;;:71;;;;;;;;;;;;;;;;;;13014:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13074:4;13067:11;;;;12833:257;13160:1;13104:55;13116:42;13104:11;:55::i;:::-;:57;13100:204;;;13223:42;13195:3;;:71;;;;;;;;;;;;;;;;;;13288:4;13281:11;;;;13100:204;13374:1;13318:55;13330:42;13318:11;:55::i;:::-;:57;13314:203;;;13436:42;13408:3;;:71;;;;;;;;;;;;;;;;;;13501:4;13494:11;;;;13314:203;13587:1;13531:55;13543:42;13531:11;:55::i;:::-;:57;13527:205;;;13651:42;13623:3;;:71;;;;;;;;;;;;;;;;;;13716:4;13709:11;;;;13527:205;13749:5;13742:12;;11979:1783;;:::o;40184:120::-;40283:13;40259:21;:37;;;;;;;;;;;;:::i;:::-;;40184:120;:::o;61:1380:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"./usingOraclize.sol\";\r\n\r\ncontract PriceOracle is usingOraclize {\r\n    address owner;\r\n    string public ETHUSDSTRING;\r\n\r\n    event LogPriceUpdated(string price);\r\n    event LogNewOraclizeQuery(string description);\r\n    event LogUpdate(address indexed _owner, uint indexed _balance);\r\n\r\n    //Constructor\r\n    constructor() payable public{\r\n        owner = msg.sender;\r\n        emit LogUpdate(owner, address(this).balance);\r\n        OAR = OraclizeAddrResolverI(0xE2b2C6e4E5E23B0132dC35EC7e3f763a7C2098fe);\r\n        /*updatePrice();*/\r\n    }\r\n\r\n    function __callback(bytes32 myid, string result){\r\n        if (msg.sender != oraclize_cbAddress()) revert();\r\n        ETHUSDSTRING = result;\r\n        emit LogPriceUpdated(result);\r\n        /*        updatePrice();*/\r\n    }\r\n\r\n    function getBalance() external returns (uint _balance) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    // get current price of ETH in USD from kraken\r\n    function updatePrice() external payable {\r\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\r\n            emit LogNewOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\");\r\n        } else {\r\n            emit LogNewOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\r\n            oraclize_query(\"URL\", \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\");\r\n        }\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\petri\\Desktop\\CryptoTickets\\contracts\\PriceOracle.sol",
  "ast": {
    "absolutePath": "/C/Users/petri/Desktop/CryptoTickets/contracts/PriceOracle.sol",
    "exportedSymbols": {
      "PriceOracle": [
        537
      ]
    },
    "id": 538,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 428,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/C/Users/petri/Desktop/CryptoTickets/contracts/usingOraclize.sol",
        "file": "./usingOraclize.sol",
        "id": 429,
        "nodeType": "ImportDirective",
        "scope": 538,
        "sourceUnit": 7166,
        "src": "28:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 430,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7165,
              "src": "85:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$7165",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 431,
            "nodeType": "InheritanceSpecifier",
            "src": "85:13:2"
          }
        ],
        "contractDependencies": [
          7165
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 537,
        "linearizedBaseContracts": [
          537,
          7165
        ],
        "name": "PriceOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 433,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 537,
            "src": "106:13:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 432,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "106:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 435,
            "name": "ETHUSDSTRING",
            "nodeType": "VariableDeclaration",
            "scope": 537,
            "src": "126:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 434,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "126:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 439,
            "name": "LogPriceUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "183:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "182:14:2"
            },
            "src": "161:36:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 443,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "229:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:20:2"
            },
            "src": "203:46:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 449,
            "name": "LogUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "271:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 447,
                  "indexed": true,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "295:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "270:47:2"
            },
            "src": "255:63:2"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "373:202:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "384:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 453,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7180,
                        "src": "392:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "392:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "384:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "384:18:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 458,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "428:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 460,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7211,
                              "src": "443:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PriceOracle_$537",
                                "typeString": "contract PriceOracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PriceOracle_$537",
                                "typeString": "contract PriceOracle"
                              }
                            ],
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "435:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "435:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "435:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 457,
                      "name": "LogUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "418:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "418:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "EmitStatement",
                  "src": "413:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 465,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1865,
                      "src": "468:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$1275",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307845326232433665344535453233423031333264433335454337653366373633613743323039386665",
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "496:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xE2b2C6e4E5E23B0132dC35EC7e3f763a7C2098fe"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 466,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1275,
                        "src": "474:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$1275_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "474:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$1275",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "468:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$1275",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "468:71:2"
                }
              ]
            },
            "documentation": null,
            "id": 472,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:0:2"
            },
            "scope": 537,
            "src": "345:230:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "631:174:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7180,
                        "src": "646:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "646:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 481,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5138,
                        "src": "660:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "660:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "646:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 487,
                  "nodeType": "IfStatement",
                  "src": "642:48:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 484,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          7185,
                          7186
                        ],
                        "referencedDeclaration": 7185,
                        "src": "682:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "682:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 486,
                    "nodeType": "ExpressionStatement",
                    "src": "682:8:2"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 488,
                      "name": "ETHUSDSTRING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "701:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 489,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "716:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "701:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "701:21:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 493,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "754:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 492,
                      "name": "LogPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "738:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "738:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "EmitStatement",
                  "src": "733:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 497,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "603:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "617:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:29:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "631:0:2"
            },
            "scope": 537,
            "src": "583:222:2",
            "stateMutability": "nonpayable",
            "superFunction": 2080,
            "visibility": "public"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "868:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 503,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7211,
                          "src": "894:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PriceOracle_$537",
                            "typeString": "contract PriceOracle"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PriceOracle_$537",
                            "typeString": "contract PriceOracle"
                          }
                        ],
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "886:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "886:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "886:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 501,
                  "id": 506,
                  "nodeType": "Return",
                  "src": "879:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 508,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "853:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "852:15:2"
            },
            "scope": 537,
            "src": "813:102:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 535,
              "nodeType": "Block",
              "src": "1015:421:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1048:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 511,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          2112,
                          2130
                        ],
                        "referencedDeclaration": 2112,
                        "src": "1030:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1030:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 515,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7211,
                            "src": "1065:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceOracle_$537",
                              "typeString": "contract PriceOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PriceOracle_$537",
                              "typeString": "contract PriceOracle"
                            }
                          ],
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1057:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1057:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1057:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1030:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 533,
                    "nodeType": "Block",
                    "src": "1216:213:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1256:55:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 524,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "1236:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1236:76:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "EmitStatement",
                        "src": "1231:81:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1342:5:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f76322f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e74",
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1349:67:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              },
                              "value": "json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              }
                            ],
                            "id": 528,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2170,
                              2212,
                              2258,
                              2302,
                              2345,
                              2390,
                              2439,
                              2486,
                              2533,
                              2582,
                              2635,
                              2686,
                              2723,
                              2763,
                              2806,
                              2846,
                              2891,
                              2939,
                              2990,
                              3038,
                              3091,
                              3147,
                              3206,
                              3262,
                              3323,
                              3387,
                              3454,
                              3518,
                              3587,
                              3659,
                              3734,
                              3806,
                              3853,
                              3902,
                              3955,
                              4006,
                              4043,
                              4083,
                              4126,
                              4166,
                              4211,
                              4259,
                              4310,
                              4358,
                              4411,
                              4467,
                              4526,
                              4582,
                              4643,
                              4707,
                              4774,
                              4838,
                              4907,
                              4979,
                              5054,
                              5126
                            ],
                            "referencedDeclaration": 2170,
                            "src": "1327:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1327:90:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 532,
                        "nodeType": "ExpressionStatement",
                        "src": "1327:90:2"
                      }
                    ]
                  },
                  "id": 534,
                  "nodeType": "IfStatement",
                  "src": "1026:403:2",
                  "trueBody": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "1080:130:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1120:77:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 519,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "1100:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1100:98:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 522,
                        "nodeType": "EmitStatement",
                        "src": "1095:103:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 536,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:0:2"
            },
            "scope": 537,
            "src": "975:461:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 538,
        "src": "61:1380:2"
      }
    ],
    "src": "0:1441:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/petri/Desktop/CryptoTickets/contracts/PriceOracle.sol",
    "exportedSymbols": {
      "PriceOracle": [
        537
      ]
    },
    "id": 538,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 428,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/C/Users/petri/Desktop/CryptoTickets/contracts/usingOraclize.sol",
        "file": "./usingOraclize.sol",
        "id": 429,
        "nodeType": "ImportDirective",
        "scope": 538,
        "sourceUnit": 7166,
        "src": "28:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 430,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7165,
              "src": "85:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$7165",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 431,
            "nodeType": "InheritanceSpecifier",
            "src": "85:13:2"
          }
        ],
        "contractDependencies": [
          7165
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 537,
        "linearizedBaseContracts": [
          537,
          7165
        ],
        "name": "PriceOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 433,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 537,
            "src": "106:13:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 432,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "106:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 435,
            "name": "ETHUSDSTRING",
            "nodeType": "VariableDeclaration",
            "scope": 537,
            "src": "126:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 434,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "126:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 439,
            "name": "LogPriceUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "183:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "182:14:2"
            },
            "src": "161:36:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 443,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "229:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:20:2"
            },
            "src": "203:46:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 449,
            "name": "LogUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "271:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 447,
                  "indexed": true,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 449,
                  "src": "295:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "270:47:2"
            },
            "src": "255:63:2"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "373:202:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "384:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 453,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7180,
                        "src": "392:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "392:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "384:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "384:18:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 458,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "428:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 460,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7211,
                              "src": "443:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PriceOracle_$537",
                                "typeString": "contract PriceOracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PriceOracle_$537",
                                "typeString": "contract PriceOracle"
                              }
                            ],
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "435:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "435:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "435:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 457,
                      "name": "LogUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "418:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "418:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "EmitStatement",
                  "src": "413:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 465,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1865,
                      "src": "468:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$1275",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307845326232433665344535453233423031333264433335454337653366373633613743323039386665",
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "496:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xE2b2C6e4E5E23B0132dC35EC7e3f763a7C2098fe"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 466,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1275,
                        "src": "474:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$1275_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "474:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$1275",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "468:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$1275",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "468:71:2"
                }
              ]
            },
            "documentation": null,
            "id": 472,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:0:2"
            },
            "scope": 537,
            "src": "345:230:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "631:174:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7180,
                        "src": "646:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "646:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 481,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5138,
                        "src": "660:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "660:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "646:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 487,
                  "nodeType": "IfStatement",
                  "src": "642:48:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 484,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          7185,
                          7186
                        ],
                        "referencedDeclaration": 7185,
                        "src": "682:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "682:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 486,
                    "nodeType": "ExpressionStatement",
                    "src": "682:8:2"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 488,
                      "name": "ETHUSDSTRING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "701:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 489,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "716:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "701:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "701:21:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 493,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "754:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 492,
                      "name": "LogPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "738:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "738:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "EmitStatement",
                  "src": "733:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 497,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "603:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "617:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:29:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "631:0:2"
            },
            "scope": 537,
            "src": "583:222:2",
            "stateMutability": "nonpayable",
            "superFunction": 2080,
            "visibility": "public"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "868:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 503,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7211,
                          "src": "894:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PriceOracle_$537",
                            "typeString": "contract PriceOracle"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PriceOracle_$537",
                            "typeString": "contract PriceOracle"
                          }
                        ],
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "886:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "886:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "886:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 501,
                  "id": 506,
                  "nodeType": "Return",
                  "src": "879:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 508,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "853:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "852:15:2"
            },
            "scope": 537,
            "src": "813:102:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 535,
              "nodeType": "Block",
              "src": "1015:421:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1048:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 511,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          2112,
                          2130
                        ],
                        "referencedDeclaration": 2112,
                        "src": "1030:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1030:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 515,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7211,
                            "src": "1065:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceOracle_$537",
                              "typeString": "contract PriceOracle"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PriceOracle_$537",
                              "typeString": "contract PriceOracle"
                            }
                          ],
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1057:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1057:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1057:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1030:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 533,
                    "nodeType": "Block",
                    "src": "1216:213:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1256:55:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 524,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "1236:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1236:76:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "EmitStatement",
                        "src": "1231:81:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1342:5:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f76322f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e74",
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1349:67:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              },
                              "value": "json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              }
                            ],
                            "id": 528,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2170,
                              2212,
                              2258,
                              2302,
                              2345,
                              2390,
                              2439,
                              2486,
                              2533,
                              2582,
                              2635,
                              2686,
                              2723,
                              2763,
                              2806,
                              2846,
                              2891,
                              2939,
                              2990,
                              3038,
                              3091,
                              3147,
                              3206,
                              3262,
                              3323,
                              3387,
                              3454,
                              3518,
                              3587,
                              3659,
                              3734,
                              3806,
                              3853,
                              3902,
                              3955,
                              4006,
                              4043,
                              4083,
                              4126,
                              4166,
                              4211,
                              4259,
                              4310,
                              4358,
                              4411,
                              4467,
                              4526,
                              4582,
                              4643,
                              4707,
                              4774,
                              4838,
                              4907,
                              4979,
                              5054,
                              5126
                            ],
                            "referencedDeclaration": 2170,
                            "src": "1327:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1327:90:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 532,
                        "nodeType": "ExpressionStatement",
                        "src": "1327:90:2"
                      }
                    ]
                  },
                  "id": 534,
                  "nodeType": "IfStatement",
                  "src": "1026:403:2",
                  "trueBody": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "1080:130:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1120:77:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 519,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "1100:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1100:98:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 522,
                        "nodeType": "EmitStatement",
                        "src": "1095:103:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 536,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:0:2"
            },
            "scope": 537,
            "src": "975:461:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 538,
        "src": "61:1380:2"
      }
    ],
    "src": "0:1441:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x85b020bc9cfffdadfed57d9f4f87c076b3264bfa",
      "transactionHash": "0xc428c81bdad4a0420803776d552237e063310466fcd888c9d4991fa3debd4675"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-05-02T09:46:29.493Z"
}