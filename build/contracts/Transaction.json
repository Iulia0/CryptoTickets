{
  "contractName": "Transaction",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "ETHUSDSTRING",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_title",
          "type": "string"
        },
        {
          "name": "_details",
          "type": "string"
        },
        {
          "name": "_picture",
          "type": "string"
        },
        {
          "name": "_ticketsToSale",
          "type": "uint256"
        },
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "_createEvent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eventToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "countEventsByOwner",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEventListSize",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eventArray",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "title",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "picture",
          "type": "string"
        },
        {
          "name": "ticketsToSale",
          "type": "uint256"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "id",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "LogUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "noTickets",
          "type": "string"
        }
      ],
      "name": "NoTickets",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "eventId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_title",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_details",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_picture",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_ticketToSale",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "NewEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updatePrice",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_eventId",
          "type": "uint256"
        },
        {
          "name": "moneyToTransfer",
          "type": "uint256"
        }
      ],
      "name": "_buyTicket",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008055620001646040805190810160405280600c81526020017f546f6d6f72726f776c616e640000000000000000000000000000000000000000815250606060405190810160405280603681526020017f546f6d6f72726f776c616e6420697320616e20656c656374726f6e696320646181526020017f6e6365206d7573696320666573746976616c202e2e200000000000000000000081525060a060405190810160405280606b81526020017f68747470733a2f2f7777772e746f6d6f72726f776c616e642e636f6d2f73726381526020017f2f46726f6e74656e642f5468656d65732f746f6d6f72726f776c616e642f436f81526020017f72652f4c61796f75742f696d616765732f6f70656e67726170682f746f6d6f7281526020017f726f776c616e642e6a7067000000000000000000000000000000000000000000815250620249f061015d6200033a640100000000026401000000009004565b620002086040805190810160405280600481526020017f54656458000000000000000000000000000000000000000000000000000000008152506040805190810160405280601f81526020017f496e20746865206d696e64206f6620612070726f6372617374696e61746f720081525060e06040519081016040528060a3815260200162003fac60a39139602260166200033a640100000000026401000000009004565b33600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff1631600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fd176e7c6abd789c341ab22cef27aa1fbc7461f5f9d6a6e55faa0b9df32a7051460405160405180910390a3736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200033462000702640100000000026401000000009004565b62001a53565b600060018060e0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018881526020018781526020018681526020018581526020016000548152509080600181540180825580915050906001820390600052602060002090600702016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906200041b9291906200191d565b5060408201518160020190805190602001906200043a9291906200191d565b506060820151816003019080519060200190620004599291906200191d565b506080820151816004015560a0820151816005015560c082015181600601555050039050336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050555060008081548092919060010191905055507f481e04a8bbe082f51b05cbee66e189f0f5d4c055e46872d1c76d16c782be362881338888888888604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001868152602001858152602001848103845289818151815260200191508051906020019080838360005b83811015620005e5578082015181840152602081019050620005c8565b50505050905090810190601f168015620006135780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b838110156200064e57808201518184015260208101905062000631565b50505050905090810190601f1680156200067c5780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019080838360005b83811015620006b75780820151818401526020810190506200069a565b50505050905090810190601f168015620006e55780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a1505050505050565b3073ffffffffffffffffffffffffffffffffffffffff1631620007696040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506200098e640100000000026401000000009004565b11156200082a577f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e60405180806020018281038252604b8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656500000000000000000000000000000000000000000081525060600191505060405180910390a16200098c565b7f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16200098a6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604181526020017f6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f763281526020017f2f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e81526020017f740000000000000000000000000000000000000000000000000000000000000081525062000d93640100000000026401000000009004565b505b565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000a125750600062000a10600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662001375640100000000026401000000009004565b145b1562000a355762000a33600062001380640100000000026401000000009004565b505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000abc57600080fd5b505af115801562000ad1573d6000803e3d6000fd5b505050506040513d602081101562000ae857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562000c5557600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000bd757600080fd5b505af115801562000bec573d6000803e3d6000fd5b505050506040513d602081101562000c0357600080fd5b8101908080519060200190929190505050600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562000d0157808201518184015260208101905062000ce4565b50505050905090810190601f16801562000d2f5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801562000d4f57600080fd5b505af115801562000d64573d6000803e3d6000fd5b505050506040513d602081101562000d7b57600080fd5b81019080805190602001909291905050509050919050565b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000e195750600062000e17600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662001375640100000000026401000000009004565b145b1562000e3c5762000e3a600062001380640100000000026401000000009004565b505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000ec357600080fd5b505af115801562000ed8573d6000803e3d6000fd5b505050506040513d602081101562000eef57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156200105c57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562000fde57600080fd5b505af115801562000ff3573d6000803e3d6000fd5b505050506040513d60208110156200100a57600080fd5b8101908080519060200190929190505050600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562001108578082015181840152602081019050620010eb565b50505050905090810190601f168015620011365780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156200115657600080fd5b505af11580156200116b573d6000803e3d6000fd5b505050506040513d60208110156200118257600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115620011ba57600060010291506200136e565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156200127457808201518184015260208101905062001257565b50505050905090810190601f168015620012a25780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015620012dd578082015181840152602081019050620012c0565b50505050905090810190601f1680156200130b5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b1580156200132d57600080fd5b505af115801562001342573d6000803e3d6000fd5b50505050506040513d60208110156200135a57600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b60006200139b620013a2640100000000026401000000009004565b9050919050565b600080620013d3731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62001375640100000000026401000000009004565b11156200148857731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200147e6040805190810160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062001901640100000000026401000000009004565b60019050620018fe565b6000620014b873c03a2615d5efaf5f49f60b7bb6583eaec212fdf162001375640100000000026401000000009004565b11156200156d5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620015636040805190810160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062001901640100000000026401000000009004565b60019050620018fe565b60006200159d73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62001375640100000000026401000000009004565b1115620016525773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620016486040805190810160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062001901640100000000026401000000009004565b60019050620018fe565b60006200168273146500cfd35b22e4a392fe0adc06de1a1368ed4862001375640100000000026401000000009004565b1115620017375773146500cfd35b22e4a392fe0adc06de1a1368ed48600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200172d6040805190810160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062001901640100000000026401000000009004565b60019050620018fe565b600062001767736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562001375640100000000026401000000009004565b1115620017cd57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620018fe565b6000620017fd7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62001375640100000000026401000000009004565b111562001863577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620018fe565b6000620018937351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62001375640100000000026401000000009004565b1115620018f9577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050620018fe565b600090505b90565b806006908051906020019062001919929190620019a4565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200196057805160ff191683800117855562001991565b8280016001018555821562001991579182015b828111156200199057825182559160200191906001019062001973565b5b509050620019a0919062001a2b565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620019e757805160ff191683800117855562001a18565b8280016001018555821562001a18579182015b8281111562001a17578251825591602001919060010190620019fa565b5b50905062001a27919062001a2b565b5090565b62001a5091905b8082111562001a4c57600081600090555060010162001a32565b5090565b90565b6125498062001a636000396000f3006080604052600436106100ae576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062493452146100b3578063010d20101461014357806312065fe01461024c57806327dc297e1461027757806338bbfa50146102ee5780633ff96222146103ab5780635197e70e146104185780635440d9b01461046f5780635a5e917e1461049a578063673a7e28146104c4578063b9c7a3b4146104ce575b600080fd5b3480156100bf57600080fd5b506100c8610694565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101085780820151818401526020810190506100ed565b50505050905090810190601f1680156101355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014f57600080fd5b5061024a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919080359060200190929190505050610732565b005b34801561025857600080fd5b50610261610aeb565b6040518082815260200191505060405180910390f35b34801561028357600080fd5b506102ec6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610b0a565b005b3480156102fa57600080fd5b506103a96004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610c02565b005b3480156103b757600080fd5b506103d660048036038101908080359060200190929190505050610c07565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042457600080fd5b50610459600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c3a565b6040518082815260200191505060405180910390f35b34801561047b57600080fd5b50610484610c52565b6040518082815260200191505060405180910390f35b6104c26004803603810190808035906020019092919080359060200190929190505050610c5f565b005b6104cc610daf565b005b3480156104da57600080fd5b506104f960048036038101908080359060200190929190505050611017565b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018060200187815260200186815260200185815260200184810384528a818151815260200191508051906020019080838360005b8381101561058557808201518184015260208101905061056a565b50505050905090810190601f1680156105b25780820380516001836020036101000a031916815260200191505b50848103835289818151815260200191508051906020019080838360005b838110156105eb5780820151818401526020810190506105d0565b50505050905090810190601f1680156106185780820380516001836020036101000a031916815260200191505b50848103825288818151815260200191508051906020019080838360005b83811015610651578082015181840152602081019050610636565b50505050905090810190601f16801561067e5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b600a8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072a5780601f106106ff5761010080835404028352916020019161072a565b820191906000526020600020905b81548152906001019060200180831161070d57829003601f168201915b505050505081565b600060018060e0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018881526020018781526020018681526020018581526020016000548152509080600181540180825580915050906001820390600052602060002090600702016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906108119291906123f8565b50604082015181600201908051906020019061082e9291906123f8565b50606082015181600301908051906020019061084b9291906123f8565b506080820151816004015560a0820151816005015560c082015181600601555050039050336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050555060008081548092919060010191905055507f481e04a8bbe082f51b05cbee66e189f0f5d4c055e46872d1c76d16c782be362881338888888888604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001868152602001858152602001848103845289818151815260200191508051906020019080838360005b838110156109d55780820151818401526020810190506109ba565b50505050905090810190601f168015610a025780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b83811015610a3b578082015181840152602081019050610a20565b50505050905090810190601f168015610a685780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019080838360005b83811015610aa1578082015181840152602081019050610a86565b50505050905090810190601f168015610ace5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a1505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b610b12611250565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b4b57600080fd5b80600a9080519060200190610b61929190612478565b507f71f1a5645e51a2da828ffcf79cc17da88eb25e1bca8b9dced23210847a4769c1816040518080602001828103825283818151815260200191508051906020019080838360005b83811015610bc4578082015181840152602081019050610ba9565b50505050905090810190601f168015610bf15780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b505050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b6000600180549050905090565b6000600183815481101515610c7057fe5b9060005260206000209060070201600401541415610cf5577f71f1a5645e51a2da828ffcf79cc17da88eb25e1bca8b9dced23210847a4769c160405180806020018281038252601e8152602001807f546865726520617265206e6f207469636b65747320617661696c61626c65000081525060200191505060405180910390a1610dab565b8034141515610d0357600080fd5b600182815481101515610d1257fe5b906000526020600020906007020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505050600182815481101515610d8857fe5b906000526020600020906007020160040160008154809291906001900391905055505b5050565b3073ffffffffffffffffffffffffffffffffffffffff1631610e056040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506115b2565b1115610ec4577f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e60405180806020018281038252604b8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656500000000000000000000000000000000000000000081525060600191505060405180910390a1611015565b7f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16110136040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604181526020017f6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f763281526020017f2f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e81526020017f7400000000000000000000000000000000000000000000000000000000000000815250611986565b505b565b60018181548110151561102657fe5b90600052602060002090600702016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110f85780601f106110cd576101008083540402835291602001916110f8565b820191906000526020600020905b8154815290600101906020018083116110db57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111965780601f1061116b57610100808354040283529160200191611196565b820191906000526020600020905b81548152906001019060200180831161117957829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112345780601f1061120957610100808354040283529160200191611234565b820191906000526020600020905b81548152906001019060200180831161121757829003601f168201915b5050505050908060040154908060050154908060060154905087565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112c2575060006112c0600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f2c565b145b156112d3576112d16000611f37565b505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561135957600080fd5b505af115801561136d573d6000803e3d6000fd5b505050506040513d602081101561138357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156114ec57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561147057600080fd5b505af1158015611484573d6000803e3d6000fd5b505050506040513d602081101561149a57600080fd5b8101908080519060200190929190505050600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561157257600080fd5b505af1158015611586573d6000803e3d6000fd5b505050506040513d602081101561159c57600080fd5b8101908080519060200190929190505050905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061162457506000611622600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f2c565b145b15611635576116336000611f37565b505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156116bb57600080fd5b505af11580156116cf573d6000803e3d6000fd5b505050506040513d60208110156116e557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561184e57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156117d257600080fd5b505af11580156117e6573d6000803e3d6000fd5b505050506040513d60208110156117fc57600080fd5b8101908080519060200190929190505050600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118f85780820151818401526020810190506118dd565b50505050905090810190601f1680156119255780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561194457600080fd5b505af1158015611958573d6000803e3d6000fd5b505050506040513d602081101561196e57600080fd5b81019080805190602001909291905050509050919050565b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806119fa575060006119f8600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f2c565b145b15611a0b57611a096000611f37565b505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611a9157600080fd5b505af1158015611aa5573d6000803e3d6000fd5b505050506040513d6020811015611abb57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611c2457600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611ba857600080fd5b505af1158015611bbc573d6000803e3d6000fd5b505050506040513d6020811015611bd257600080fd5b8101908080519060200190929190505050600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611cce578082015181840152602081019050611cb3565b50505050905090810190601f168015611cfb5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611d1a57600080fd5b505af1158015611d2e573d6000803e3d6000fd5b505050506040513d6020811015611d4457600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115611d7a5760006001029150611f25565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611e32578082015181840152602081019050611e17565b50505050905090810190601f168015611e5f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611e98578082015181840152602081019050611e7d565b50505050905090810190601f168015611ec55780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015611ee657600080fd5b505af1158015611efa573d6000803e3d6000fd5b50505050506040513d6020811015611f1157600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b6000611f41611f48565b9050919050565b600080611f68731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611f2c565b111561200a57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120016040805190810160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506123de565b600190506123db565b600061202973c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611f2c565b11156120cb5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120c26040805190810160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506123de565b600190506123db565b60006120ea73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611f2c565b111561218c5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121836040805190810160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506123de565b600190506123db565b60006121ab73146500cfd35b22e4a392fe0adc06de1a1368ed48611f2c565b111561224d5773146500cfd35b22e4a392fe0adc06de1a1368ed48600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122446040805190810160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506123de565b600190506123db565b600061226c736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611f2c565b11156122d057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123db565b60006122ef7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611f2c565b1115612353577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123db565b60006123727351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611f2c565b11156123d6577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123db565b600090505b90565b80600690805190602001906123f4929190612478565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061243957805160ff1916838001178555612467565b82800160010185558215612467579182015b8281111561246657825182559160200191906001019061244b565b5b50905061247491906124f8565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124b957805160ff19168380011785556124e7565b828001600101855582156124e7579182015b828111156124e65782518255916020019190600101906124cb565b5b5090506124f491906124f8565b5090565b61251a91905b808211156125165760008160009055506001016124fe565b5090565b905600a165627a7a7230582063af0b713342b75e7c44c6f5eb972e8cc9250d62db7ebf418b16cc39f2fcb3b1002968747470733a2f2f63646e2e766f782d63646e2e636f6d2f7468756d626f722f4c3957573153696c6842353768434635786231666e4170797459633d2f343378303a353736783335352f31323030783830302f66696c746572733a666f63616c28343378303a35373678333535292f63646e2e766f782d63646e2e636f6d2f6173736574732f323430373035372f544544785f6c6f676f2d363230783335352e706e67",
  "deployedBytecode": "0x6080604052600436106100ae576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062493452146100b3578063010d20101461014357806312065fe01461024c57806327dc297e1461027757806338bbfa50146102ee5780633ff96222146103ab5780635197e70e146104185780635440d9b01461046f5780635a5e917e1461049a578063673a7e28146104c4578063b9c7a3b4146104ce575b600080fd5b3480156100bf57600080fd5b506100c8610694565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101085780820151818401526020810190506100ed565b50505050905090810190601f1680156101355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014f57600080fd5b5061024a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919080359060200190929190505050610732565b005b34801561025857600080fd5b50610261610aeb565b6040518082815260200191505060405180910390f35b34801561028357600080fd5b506102ec6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610b0a565b005b3480156102fa57600080fd5b506103a96004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610c02565b005b3480156103b757600080fd5b506103d660048036038101908080359060200190929190505050610c07565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042457600080fd5b50610459600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c3a565b6040518082815260200191505060405180910390f35b34801561047b57600080fd5b50610484610c52565b6040518082815260200191505060405180910390f35b6104c26004803603810190808035906020019092919080359060200190929190505050610c5f565b005b6104cc610daf565b005b3480156104da57600080fd5b506104f960048036038101908080359060200190929190505050611017565b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018060200187815260200186815260200185815260200184810384528a818151815260200191508051906020019080838360005b8381101561058557808201518184015260208101905061056a565b50505050905090810190601f1680156105b25780820380516001836020036101000a031916815260200191505b50848103835289818151815260200191508051906020019080838360005b838110156105eb5780820151818401526020810190506105d0565b50505050905090810190601f1680156106185780820380516001836020036101000a031916815260200191505b50848103825288818151815260200191508051906020019080838360005b83811015610651578082015181840152602081019050610636565b50505050905090810190601f16801561067e5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b600a8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072a5780601f106106ff5761010080835404028352916020019161072a565b820191906000526020600020905b81548152906001019060200180831161070d57829003601f168201915b505050505081565b600060018060e0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018881526020018781526020018681526020018581526020016000548152509080600181540180825580915050906001820390600052602060002090600702016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906108119291906123f8565b50604082015181600201908051906020019061082e9291906123f8565b50606082015181600301908051906020019061084b9291906123f8565b506080820151816004015560a0820151816005015560c082015181600601555050039050336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050555060008081548092919060010191905055507f481e04a8bbe082f51b05cbee66e189f0f5d4c055e46872d1c76d16c782be362881338888888888604051808881526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001868152602001858152602001848103845289818151815260200191508051906020019080838360005b838110156109d55780820151818401526020810190506109ba565b50505050905090810190601f168015610a025780820380516001836020036101000a031916815260200191505b50848103835288818151815260200191508051906020019080838360005b83811015610a3b578082015181840152602081019050610a20565b50505050905090810190601f168015610a685780820380516001836020036101000a031916815260200191505b50848103825287818151815260200191508051906020019080838360005b83811015610aa1578082015181840152602081019050610a86565b50505050905090810190601f168015610ace5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390a1505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b610b12611250565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b4b57600080fd5b80600a9080519060200190610b61929190612478565b507f71f1a5645e51a2da828ffcf79cc17da88eb25e1bca8b9dced23210847a4769c1816040518080602001828103825283818151815260200191508051906020019080838360005b83811015610bc4578082015181840152602081019050610ba9565b50505050905090810190601f168015610bf15780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b505050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b6000600180549050905090565b6000600183815481101515610c7057fe5b9060005260206000209060070201600401541415610cf5577f71f1a5645e51a2da828ffcf79cc17da88eb25e1bca8b9dced23210847a4769c160405180806020018281038252601e8152602001807f546865726520617265206e6f207469636b65747320617661696c61626c65000081525060200191505060405180910390a1610dab565b8034141515610d0357600080fd5b600182815481101515610d1257fe5b906000526020600020906007020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505050600182815481101515610d8857fe5b906000526020600020906007020160040160008154809291906001900391905055505b5050565b3073ffffffffffffffffffffffffffffffffffffffff1631610e056040805190810160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506115b2565b1115610ec4577f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e60405180806020018281038252604b8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656500000000000000000000000000000000000000000081525060600191505060405180910390a1611015565b7f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16110136040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604181526020017f6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f763281526020017f2f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e81526020017f7400000000000000000000000000000000000000000000000000000000000000815250611986565b505b565b60018181548110151561102657fe5b90600052602060002090600702016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110f85780601f106110cd576101008083540402835291602001916110f8565b820191906000526020600020905b8154815290600101906020018083116110db57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111965780601f1061116b57610100808354040283529160200191611196565b820191906000526020600020905b81548152906001019060200180831161117957829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112345780601f1061120957610100808354040283529160200191611234565b820191906000526020600020905b81548152906001019060200180831161121757829003601f168201915b5050505050908060040154908060050154908060060154905087565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806112c2575060006112c0600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f2c565b145b156112d3576112d16000611f37565b505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561135957600080fd5b505af115801561136d573d6000803e3d6000fd5b505050506040513d602081101561138357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156114ec57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561147057600080fd5b505af1158015611484573d6000803e3d6000fd5b505050506040513d602081101561149a57600080fd5b8101908080519060200190929190505050600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561157257600080fd5b505af1158015611586573d6000803e3d6000fd5b505050506040513d602081101561159c57600080fd5b8101908080519060200190929190505050905090565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061162457506000611622600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f2c565b145b15611635576116336000611f37565b505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156116bb57600080fd5b505af11580156116cf573d6000803e3d6000fd5b505050506040513d60208110156116e557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561184e57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156117d257600080fd5b505af11580156117e6573d6000803e3d6000fd5b505050506040513d60208110156117fc57600080fd5b8101908080519060200190929190505050600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118f85780820151818401526020810190506118dd565b50505050905090810190601f1680156119255780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561194457600080fd5b505af1158015611958573d6000803e3d6000fd5b505050506040513d602081101561196e57600080fd5b81019080805190602001909291905050509050919050565b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806119fa575060006119f8600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611f2c565b145b15611a0b57611a096000611f37565b505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611a9157600080fd5b505af1158015611aa5573d6000803e3d6000fd5b505050506040513d6020811015611abb57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611c2457600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611ba857600080fd5b505af1158015611bbc573d6000803e3d6000fd5b505050506040513d6020811015611bd257600080fd5b8101908080519060200190929190505050600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611cce578082015181840152602081019050611cb3565b50505050905090810190601f168015611cfb5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611d1a57600080fd5b505af1158015611d2e573d6000803e3d6000fd5b505050506040513d6020811015611d4457600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115611d7a5760006001029150611f25565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015611e32578082015181840152602081019050611e17565b50505050905090810190601f168015611e5f5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611e98578082015181840152602081019050611e7d565b50505050905090810190601f168015611ec55780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015611ee657600080fd5b505af1158015611efa573d6000803e3d6000fd5b50505050506040513d6020811015611f1157600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b6000611f41611f48565b9050919050565b600080611f68731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611f2c565b111561200a57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120016040805190810160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506123de565b600190506123db565b600061202973c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611f2c565b11156120cb5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120c26040805190810160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506123de565b600190506123db565b60006120ea73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611f2c565b111561218c5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121836040805190810160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506123de565b600190506123db565b60006121ab73146500cfd35b22e4a392fe0adc06de1a1368ed48611f2c565b111561224d5773146500cfd35b22e4a392fe0adc06de1a1368ed48600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122446040805190810160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506123de565b600190506123db565b600061226c736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611f2c565b11156122d057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123db565b60006122ef7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611f2c565b1115612353577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123db565b60006123727351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611f2c565b11156123d6577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506123db565b600090505b90565b80600690805190602001906123f4929190612478565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061243957805160ff1916838001178555612467565b82800160010185558215612467579182015b8281111561246657825182559160200191906001019061244b565b5b50905061247491906124f8565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124b957805160ff19168380011785556124e7565b828001600101855582156124e7579182015b828111156124e65782518255916020019190600101906124cb565b5b5090506124f491906124f8565b5090565b61251a91905b808211156125165760008160009055506001016124fe565b5090565b905600a165627a7a7230582063af0b713342b75e7c44c6f5eb972e8cc9250d62db7ebf418b16cc39f2fcb3b10029",
  "sourceMap": "81:1826:2:-;;;69:1:0;48:22;;809:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:6;1028:3;809:12;;;:223;;;:::i;:::-;1043:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:2;1296;1043:12;;;:256;;;:::i;:::-;473:10:2;465:5;;:18;;;;;;;;;;;;;;;;;;524:4;516:21;;;509:5;;;;;;;;;;;499:39;;;;;;;;;;;;577:42;549:3;;:71;;;;;;;;;;;;;;;;;;631:13;:11;;;:13;;;:::i;:::-;81:1826;;1345:454:0;1468:7;1589:1;1478:10;1494:91;;;;;;;;;1507:10;1494:91;;;;;;1519:6;1494:91;;;;1527:8;1494:91;;;;1537:8;1494:91;;;;1547:14;1494:91;;;;1563:6;1494:91;;;;1571:13;;1494:91;;;1478:108;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1478:108:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:112;1468:122;;1620:10;1601:12;:16;1614:2;1601:16;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1641:18;:30;1660:10;1641:30;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;1684:13;;:15;;;;;;;;;;;;;1715:76;1724:2;1728:10;1740:6;1748:8;1758;1768:14;1784:6;1715:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1715:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1715:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1715:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:454;;;;;;:::o;1040:449:2:-;1128:4;1120:21;;;1093:24;;;;;;;;;;;;;;;;;;;:17;;;:24;;;:::i;:::-;:48;1089:393;;;1158:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:393;;;1289:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:90;;;:::i;:::-;;1089:393;1040:449::o;14049:136:3:-;14125:4;11459:1;11453:3;;;;;;;;;;;11445:15;;;11444:49;;;;11491:1;11464:25;11484:3;;;;;;;;;;;11464:11;;;:25;;;:::i;:::-;:28;11444:49;11441:102;;;11508:35;11165:1;11508:19;;;:35;;;:::i;:::-;;11441:102;11580:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11580:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11580:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11580:16:3;;;;;;;;;;;;;;;;11559:37;;11567:8;;;;;;;;;;;11559:37;;;;11556:93;;;11632:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11632:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11632:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11632:16:3;;;;;;;;;;;;;;;;11611:8;;:38;;;;;;;;;;;;;;;;;;11556:93;14148:8;;;;;;;;;;;:17;;;14166:10;14148:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14148:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14148:29:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14148:29:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14148:29:3;;;;;;;;;;;;;;;;14141:36;;14049:136;;;:::o;14362:310::-;14447:10;14469;11459:1;11453:3;;;;;;;;;;;11445:15;;;11444:49;;;;11491:1;11464:25;11484:3;;;;;;;;;;;11464:11;;;:25;;;:::i;:::-;:28;11444:49;11441:102;;;11508:35;11165:1;11508:19;;;:35;;;:::i;:::-;;11441:102;11580:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11580:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11580:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11580:16:3;;;;;;;;;;;;;;;;11559:37;;11567:8;;;;;;;;;;;11559:37;;;;11556:93;;;11632:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11632:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11632:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11632:16:3;;;;;;;;;;;;;;;;11611:8;;:38;;;;;;;;;;;;;;;;;;11556:93;14482:8;;;;;;;;;;;:17;;;14500:10;14482:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14482:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14482:29:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14482:29:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14482:29:3;;;;;;;;;;;;;;;;14469:42;;14556:6;14544:11;:18;14534:7;:28;14526:5;:36;14522:50;;;14571:1;14564:8;;;;;;14522:50;14617:8;;;;;;;;;;;:14;;;14638:5;14645:1;14648:10;14660:3;14617:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14617:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14617:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14617:47:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14617:47:3;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14617:47:3;;;;;;;;;;;;;;;;14610:54;;11662:1;14362:310;;;;;:::o;34550:154::-;34612:10;34680:5;34668:18;34659:27;;34644:53;;;:::o;11782:190::-;11845:4;11868:21;:19;;;:21;;;:::i;:::-;11861:28;;11782:190;;;:::o;11978:1783::-;12026:4;12102:1;12046:55;12058:42;12046:11;;;:55;;;:::i;:::-;:57;12042:249;;;12157:42;12129:3;;:71;;;;;;;;;;;;;;;;;;12215:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;12275:4;12268:11;;;;12042:249;12361:1;12305:55;12317:42;12305:11;;;:55;;;:::i;:::-;:57;12301:258;;;12424:42;12396:3;;:71;;;;;;;;;;;;;;;;;;12482:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;12543:4;12536:11;;;;12301:258;12629:1;12573:55;12585:42;12573:11;;;:55;;;:::i;:::-;:57;12569:253;;;12690:42;12662:3;;:71;;;;;;;;;;;;;;;;;;12748:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;12806:4;12799:11;;;;12569:253;12892:1;12836:55;12848:42;12836:11;;;:55;;;:::i;:::-;:57;12832:257;;;12955:42;12927:3;;:71;;;;;;;;;;;;;;;;;;13013:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;13073:4;13066:11;;;;12832:257;13159:1;13103:55;13115:42;13103:11;;;:55;;;:::i;:::-;:57;13099:204;;;13222:42;13194:3;;:71;;;;;;;;;;;;;;;;;;13287:4;13280:11;;;;13099:204;13373:1;13317:55;13329:42;13317:11;;;:55;;;:::i;:::-;:57;13313:203;;;13435:42;13407:3;;:71;;;;;;;;;;;;;;;;;;13500:4;13493:11;;;;13313:203;13586:1;13530:55;13542:42;13530:11;;;:55;;;:::i;:::-;:57;13526:205;;;13650:42;13622:3;;:71;;;;;;;;;;;;;;;;;;13715:4;13708:11;;;;13526:205;13748:5;13741:12;;11978:1783;;:::o;40183:120::-;40282:13;40258:21;:37;;;;;;;;;;;;:::i;:::-;;40183:120;:::o;81:1826:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "81:1826:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;155:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;155:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:454:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1345:454:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;880:100:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;880:100:2;;;;;;;;;;;;;;;;;;;;;;;660:214;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:214:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13888:153:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13888:153:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;549:45:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;549:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;649:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1807:97:0;;;;;;;;;;;;;;;;;;;;;;;1497:405:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1040:449;;;;;;505:32:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;505:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;505:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;505:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1345:454:0:-;1468:7;1589:1;1478:10;1494:91;;;;;;;;;1507:10;1494:91;;;;;;1519:6;1494:91;;;;1527:8;1494:91;;;;1537:8;1494:91;;;;1547:14;1494:91;;;;1563:6;1494:91;;;;1571:13;;1494:91;;;1478:108;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1478:108:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:112;1468:122;;1620:10;1601:12;:16;1614:2;1601:16;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1641:18;:30;1660:10;1641:30;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;1684:13;;:15;;;;;;;;;;;;;1715:76;1724:2;1728:10;1740:6;1748:8;1758;1768:14;1784:6;1715:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1715:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1715:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1715:76:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:454;;;;;;:::o;880:100:2:-;918:13;959:4;951:21;;;944:28;;880:100;:::o;660:214::-;737:20;:18;:20::i;:::-;723:34;;:10;:34;;;;719:48;;;759:8;;;719:48;793:6;778:12;:21;;;;;;;;;;;;:::i;:::-;;815:23;831:6;815:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;815:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;660:214;;:::o;13888:153:3:-;;;;:::o;549:45:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;649:51::-;;;;;;;;;;;;;;;;;:::o;1807:97::-;1856:4;1879:10;:17;;;;1872:24;;1807:97;:::o;1497:405:2:-;1623:1;1585:10;1596:8;1585:20;;;;;;;;;;;;;;;;;;;;:34;;;:39;1582:311;;;1645:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1582:311;;;1756:15;1743:9;:28;1735:37;;;;;;;;1787:10;1798:8;1787:20;;;;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:31;;:42;1819:9;1787:42;;;;;;;;;;;;;;;;;;;;;;;;1844:10;1855:8;1844:20;;;;;;;;;;;;;;;;;;;;:34;;;:37;;;;;;;;;;;;;;1582:311;1497:405;;:::o;1040:449::-;1128:4;1120:21;;;1093:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;1089:393;;;1158:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:393;;;1289:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:90::i;:::-;;1089:393;1040:449::o;505:32:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;34004:114:3:-;34064:7;11459:1;11453:3;;;;;;;;;;;11445:15;;;11444:49;;;;11491:1;11464:25;11484:3;;;;;;;;;;;11464:11;:25::i;:::-;:28;11444:49;11441:102;;;11508:35;11165:1;11508:19;:35::i;:::-;;11441:102;11580:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11580:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11580:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11580:16:3;;;;;;;;;;;;;;;;11559:37;;11567:8;;;;;;;;;;;11559:37;;;;11556:93;;;11632:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11632:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11632:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11632:16:3;;;;;;;;;;;;;;;;11611:8;;:38;;;;;;;;;;;;;;;;;;11556:93;34090:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34090:20:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34090:20:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;34090:20:3;;;;;;;;;;;;;;;;34083:27;;34004:114;:::o;14049:136::-;14125:4;11459:1;11453:3;;;;;;;;;;;11445:15;;;11444:49;;;;11491:1;11464:25;11484:3;;;;;;;;;;;11464:11;:25::i;:::-;:28;11444:49;11441:102;;;11508:35;11165:1;11508:19;:35::i;:::-;;11441:102;11580:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11580:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11580:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11580:16:3;;;;;;;;;;;;;;;;11559:37;;11567:8;;;;;;;;;;;11559:37;;;;11556:93;;;11632:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11632:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11632:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11632:16:3;;;;;;;;;;;;;;;;11611:8;;:38;;;;;;;;;;;;;;;;;;11556:93;14148:8;;;;;;;;;;;:17;;;14166:10;14148:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14148:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14148:29:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14148:29:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14148:29:3;;;;;;;;;;;;;;;;14141:36;;14049:136;;;:::o;14362:310::-;14447:10;14469;11459:1;11453:3;;;;;;;;;;;11445:15;;;11444:49;;;;11491:1;11464:25;11484:3;;;;;;;;;;;11464:11;:25::i;:::-;:28;11444:49;11441:102;;;11508:35;11165:1;11508:19;:35::i;:::-;;11441:102;11580:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11580:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11580:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11580:16:3;;;;;;;;;;;;;;;;11559:37;;11567:8;;;;;;;;;;;11559:37;;;;11556:93;;;11632:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11632:16:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11632:16:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11632:16:3;;;;;;;;;;;;;;;;11611:8;;:38;;;;;;;;;;;;;;;;;;11556:93;14482:8;;;;;;;;;;;:17;;;14500:10;14482:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14482:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14482:29:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14482:29:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14482:29:3;;;;;;;;;;;;;;;;14469:42;;14556:6;14544:11;:18;14534:7;:28;14526:5;:36;14522:50;;;14571:1;14564:8;;;;;;14522:50;14617:8;;;;;;;;;;;:14;;;14638:5;14645:1;14648:10;14660:3;14617:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14617:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14617:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14617:47:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14617:47:3;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14617:47:3;;;;;;;;;;;;;;;;14610:54;;11662:1;14362:310;;;;;:::o;34550:154::-;34612:10;34680:5;34668:18;34659:27;;34644:53;;;:::o;11782:190::-;11845:4;11868:21;:19;:21::i;:::-;11861:28;;11782:190;;;:::o;11978:1783::-;12026:4;12102:1;12046:55;12058:42;12046:11;:55::i;:::-;:57;12042:249;;;12157:42;12129:3;;:71;;;;;;;;;;;;;;;;;;12215:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12275:4;12268:11;;;;12042:249;12361:1;12305:55;12317:42;12305:11;:55::i;:::-;:57;12301:258;;;12424:42;12396:3;;:71;;;;;;;;;;;;;;;;;;12482:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;12543:4;12536:11;;;;12301:258;12629:1;12573:55;12585:42;12573:11;:55::i;:::-;:57;12569:253;;;12690:42;12662:3;;:71;;;;;;;;;;;;;;;;;;12748:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;12806:4;12799:11;;;;12569:253;12892:1;12836:55;12848:42;12836:11;:55::i;:::-;:57;12832:257;;;12955:42;12927:3;;:71;;;;;;;;;;;;;;;;;;13013:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13073:4;13066:11;;;;12832:257;13159:1;13103:55;13115:42;13103:11;:55::i;:::-;:57;13099:204;;;13222:42;13194:3;;:71;;;;;;;;;;;;;;;;;;13287:4;13280:11;;;;13099:204;13373:1;13317:55;13329:42;13317:11;:55::i;:::-;:57;13313:203;;;13435:42;13407:3;;:71;;;;;;;;;;;;;;;;;;13500:4;13493:11;;;;13313:203;13586:1;13530:55;13542:42;13530:11;:55::i;:::-;:57;13526:205;;;13650:42;13622:3;;:71;;;;;;;;;;;;;;;;;;13715:4;13708:11;;;;13526:205;13748:5;13741:12;;11978:1783;;:::o;40183:120::-;40282:13;40258:21;:37;;;;;;;;;;;;:::i;:::-;;40183:120;:::o;81:1826:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.2;\r\nimport \"./Event.sol\";\r\nimport \"./usingOraclize.sol\";\r\n\r\ncontract Transaction is Event, usingOraclize {\r\n\r\n    address owner;\r\n    string public ETHUSDSTRING;\r\n\r\n    event LogPriceUpdated(string price);\r\n    event LogNewOraclizeQuery(string description);\r\n    event LogUpdate(address indexed _owner, uint indexed _balance);\r\n\r\n    event NoTickets (string noTickets);\r\n\r\n    //Constructor\r\n    function Transaction() payable public{\r\n        owner = msg.sender;\r\n        emit LogUpdate(owner, address(this).balance);\r\n        OAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\r\n        updatePrice();\r\n    }\r\n\r\n    function __callback(bytes32 myid, string result){\r\n        if (msg.sender != oraclize_cbAddress()) revert();\r\n        ETHUSDSTRING = result;\r\n        emit LogPriceUpdated(result);\r\n/*        updatePrice();*/\r\n    }\r\n    function getBalance() public returns (uint _balance) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    // get current price of ETH in USD from kraken\r\n    function updatePrice() payable public {\r\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\r\n            LogNewOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\");\r\n        } else {\r\n            LogNewOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\r\n            oraclize_query(\"URL\", \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\");\r\n        }\r\n    }\r\n\r\n    function _buyTicket(uint _eventId, uint moneyToTransfer) external payable {\r\n        if(eventArray[_eventId].ticketsToSale == 0){\r\n            emit LogPriceUpdated(\"There are no tickets available\");\r\n        }\r\n        else{\r\n            require(msg.value == moneyToTransfer);\r\n            eventArray[_eventId].owner.send(msg.value);\r\n            eventArray[_eventId].ticketsToSale --;\r\n        }\r\n\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\petri\\Desktop\\CryptoTickets\\contracts\\Transaction.sol",
  "ast": {
    "absolutePath": "/C/Users/petri/Desktop/CryptoTickets/contracts/Transaction.sol",
    "exportedSymbols": {
      "Transaction": [
        351
      ]
    },
    "id": 352,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 189,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/C/Users/petri/Desktop/CryptoTickets/contracts/Event.sol",
        "file": "./Event.sol",
        "id": 190,
        "nodeType": "ImportDirective",
        "scope": 352,
        "sourceUnit": 136,
        "src": "25:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/petri/Desktop/CryptoTickets/contracts/usingOraclize.sol",
        "file": "./usingOraclize.sol",
        "id": 191,
        "nodeType": "ImportDirective",
        "scope": 352,
        "sourceUnit": 6360,
        "src": "48:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 192,
              "name": "Event",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 135,
              "src": "105:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Event_$135",
                "typeString": "contract Event"
              }
            },
            "id": 193,
            "nodeType": "InheritanceSpecifier",
            "src": "105:5:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 194,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6359,
              "src": "112:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6359",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 195,
            "nodeType": "InheritanceSpecifier",
            "src": "112:13:2"
          }
        ],
        "contractDependencies": [
          135,
          6359
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 351,
        "linearizedBaseContracts": [
          351,
          6359,
          135
        ],
        "name": "Transaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 197,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "135:13:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 196,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "135:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 199,
            "name": "ETHUSDSTRING",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "155:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 198,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "155:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 203,
            "name": "LogPriceUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "212:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "211:14:2"
            },
            "src": "190:36:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 207,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "258:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:20:2"
            },
            "src": "232:46:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 213,
            "name": "LogUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "300:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "indexed": true,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "324:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "299:47:2"
            },
            "src": "284:63:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 217,
            "name": "NoTickets",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "indexed": false,
                  "name": "noTickets",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "372:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "371:18:2"
            },
            "src": "355:35:2"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "454:198:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "465:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6374,
                        "src": "473:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "473:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "465:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "465:18:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 226,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "509:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 228,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6401,
                              "src": "524:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Transaction_$351",
                                "typeString": "contract Transaction"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Transaction_$351",
                                "typeString": "contract Transaction"
                              }
                            ],
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "516:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "516:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "516:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 225,
                      "name": "LogUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "499:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "499:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "EmitStatement",
                  "src": "494:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "549:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$469",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "577:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 234,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "555:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$469_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "555:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$469",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "549:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$469",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "549:71:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 239,
                      "name": "updatePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "631:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "631:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "631:13:2"
                }
              ]
            },
            "documentation": null,
            "id": 243,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Transaction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "437:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:0:2"
            },
            "scope": 351,
            "src": "417:235:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "708:166:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6374,
                        "src": "723:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "723:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 252,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4332,
                        "src": "737:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "737:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "723:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 258,
                  "nodeType": "IfStatement",
                  "src": "719:48:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 255,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          6379,
                          6380
                        ],
                        "referencedDeclaration": 6379,
                        "src": "759:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "759:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 257,
                    "nodeType": "ExpressionStatement",
                    "src": "759:8:2"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 259,
                      "name": "ETHUSDSTRING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "778:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 260,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "793:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "778:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "778:21:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "831:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 263,
                      "name": "LogPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "815:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "815:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "EmitStatement",
                  "src": "810:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 268,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "680:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "694:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "679:29:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:0:2"
            },
            "scope": 351,
            "src": "660:214:2",
            "stateMutability": "nonpayable",
            "superFunction": 1274,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "933:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 274,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6401,
                          "src": "959:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Transaction_$351",
                            "typeString": "contract Transaction"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Transaction_$351",
                            "typeString": "contract Transaction"
                          }
                        ],
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "951:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "951:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "951:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 272,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "944:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 279,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "918:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "917:15:2"
            },
            "scope": 351,
            "src": "880:100:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "1078:411:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1111:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 282,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1306,
                          1324
                        ],
                        "referencedDeclaration": 1306,
                        "src": "1093:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1093:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 286,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6401,
                            "src": "1128:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Transaction_$351",
                              "typeString": "contract Transaction"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Transaction_$351",
                              "typeString": "contract Transaction"
                            }
                          ],
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1120:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1120:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1120:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1093:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "1274:208:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1309:55:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 295,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "1289:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1289:76:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 298,
                        "nodeType": "ExpressionStatement",
                        "src": "1289:76:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1395:5:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f76322f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e74",
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1402:67:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              },
                              "value": "json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              }
                            ],
                            "id": 299,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1364,
                              1406,
                              1452,
                              1496,
                              1539,
                              1584,
                              1633,
                              1680,
                              1727,
                              1776,
                              1829,
                              1880,
                              1917,
                              1957,
                              2000,
                              2040,
                              2085,
                              2133,
                              2184,
                              2232,
                              2285,
                              2341,
                              2400,
                              2456,
                              2517,
                              2581,
                              2648,
                              2712,
                              2781,
                              2853,
                              2928,
                              3000,
                              3047,
                              3096,
                              3149,
                              3200,
                              3237,
                              3277,
                              3320,
                              3360,
                              3405,
                              3453,
                              3504,
                              3552,
                              3605,
                              3661,
                              3720,
                              3776,
                              3837,
                              3901,
                              3968,
                              4032,
                              4101,
                              4173,
                              4248,
                              4320
                            ],
                            "referencedDeclaration": 1364,
                            "src": "1380:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1380:90:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "1380:90:2"
                      }
                    ]
                  },
                  "id": 305,
                  "nodeType": "IfStatement",
                  "src": "1089:393:2",
                  "trueBody": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "1143:125:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1178:77:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 290,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "1158:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1158:98:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "1158:98:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 307,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1060:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1078:0:2"
            },
            "scope": 351,
            "src": "1040:449:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "1571:331:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 314,
                          "name": "eventArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "1585:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_EventDetails_$35_storage_$dyn_storage",
                            "typeString": "struct Event.EventDetails storage ref[] storage ref"
                          }
                        },
                        "id": 316,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 315,
                          "name": "_eventId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 309,
                          "src": "1596:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1585:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventDetails_$35_storage",
                          "typeString": "struct Event.EventDetails storage ref"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketsToSale",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "1585:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1623:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1585:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 347,
                    "nodeType": "Block",
                    "src": "1720:173:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 326,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6374,
                                  "src": "1743:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1743:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 328,
                                "name": "moneyToTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "1756:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1743:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 325,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6377,
                              6378
                            ],
                            "referencedDeclaration": 6377,
                            "src": "1735:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1735:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 331,
                        "nodeType": "ExpressionStatement",
                        "src": "1735:37:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 337,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6374,
                                "src": "1819:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1819:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 332,
                                  "name": "eventArray",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "1787:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_EventDetails_$35_storage_$dyn_storage",
                                    "typeString": "struct Event.EventDetails storage ref[] storage ref"
                                  }
                                },
                                "id": 334,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 333,
                                  "name": "_eventId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "1798:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1787:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventDetails_$35_storage",
                                  "typeString": "struct Event.EventDetails storage ref"
                                }
                              },
                              "id": 335,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "1787:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "send",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1787:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) returns (bool)"
                            }
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1787:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 340,
                        "nodeType": "ExpressionStatement",
                        "src": "1787:42:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "1844:37:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 341,
                                "name": "eventArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "1844:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_EventDetails_$35_storage_$dyn_storage",
                                  "typeString": "struct Event.EventDetails storage ref[] storage ref"
                                }
                              },
                              "id": 343,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 342,
                                "name": "_eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "1855:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1844:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EventDetails_$35_storage",
                                "typeString": "struct Event.EventDetails storage ref"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ticketsToSale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "1844:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 346,
                        "nodeType": "ExpressionStatement",
                        "src": "1844:37:2"
                      }
                    ]
                  },
                  "id": 348,
                  "nodeType": "IfStatement",
                  "src": "1582:311:2",
                  "trueBody": {
                    "id": 324,
                    "nodeType": "Block",
                    "src": "1625:81:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "546865726520617265206e6f207469636b65747320617661696c61626c65",
                              "id": 321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1661:32:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f65408936650549185f977dc2294682ad116fe88dd4c6a79fa6d243f056fdc89",
                                "typeString": "literal_string \"There are no tickets available\""
                              },
                              "value": "There are no tickets available"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f65408936650549185f977dc2294682ad116fe88dd4c6a79fa6d243f056fdc89",
                                "typeString": "literal_string \"There are no tickets available\""
                              }
                            ],
                            "id": 320,
                            "name": "LogPriceUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "1645:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1645:49:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 323,
                        "nodeType": "EmitStatement",
                        "src": "1640:54:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 350,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_buyTicket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "name": "_eventId",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "1517:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 311,
                  "name": "moneyToTransfer",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "1532:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1516:37:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1571:0:2"
            },
            "scope": 351,
            "src": "1497:405:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 352,
        "src": "81:1826:2"
      }
    ],
    "src": "0:1907:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/petri/Desktop/CryptoTickets/contracts/Transaction.sol",
    "exportedSymbols": {
      "Transaction": [
        351
      ]
    },
    "id": 352,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 189,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/C/Users/petri/Desktop/CryptoTickets/contracts/Event.sol",
        "file": "./Event.sol",
        "id": 190,
        "nodeType": "ImportDirective",
        "scope": 352,
        "sourceUnit": 136,
        "src": "25:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/petri/Desktop/CryptoTickets/contracts/usingOraclize.sol",
        "file": "./usingOraclize.sol",
        "id": 191,
        "nodeType": "ImportDirective",
        "scope": 352,
        "sourceUnit": 6360,
        "src": "48:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 192,
              "name": "Event",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 135,
              "src": "105:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Event_$135",
                "typeString": "contract Event"
              }
            },
            "id": 193,
            "nodeType": "InheritanceSpecifier",
            "src": "105:5:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 194,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6359,
              "src": "112:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6359",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 195,
            "nodeType": "InheritanceSpecifier",
            "src": "112:13:2"
          }
        ],
        "contractDependencies": [
          135,
          6359
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 351,
        "linearizedBaseContracts": [
          351,
          6359,
          135
        ],
        "name": "Transaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 197,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "135:13:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 196,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "135:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 199,
            "name": "ETHUSDSTRING",
            "nodeType": "VariableDeclaration",
            "scope": 351,
            "src": "155:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 198,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "155:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 203,
            "name": "LogPriceUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "212:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "211:14:2"
            },
            "src": "190:36:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 207,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "258:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:20:2"
            },
            "src": "232:46:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 213,
            "name": "LogUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "300:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "indexed": true,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "324:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "299:47:2"
            },
            "src": "284:63:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 217,
            "name": "NoTickets",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "indexed": false,
                  "name": "noTickets",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "372:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "371:18:2"
            },
            "src": "355:35:2"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "454:198:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 220,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "465:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6374,
                        "src": "473:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "473:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "465:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "465:18:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 226,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "509:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 228,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6401,
                              "src": "524:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Transaction_$351",
                                "typeString": "contract Transaction"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Transaction_$351",
                                "typeString": "contract Transaction"
                              }
                            ],
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "516:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "516:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "516:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 225,
                      "name": "LogUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "499:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "499:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "EmitStatement",
                  "src": "494:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "549:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$469",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "577:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 234,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "555:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$469_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "555:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$469",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "549:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$469",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "549:71:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 239,
                      "name": "updatePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "631:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "631:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "631:13:2"
                }
              ]
            },
            "documentation": null,
            "id": 243,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Transaction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "437:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:0:2"
            },
            "scope": 351,
            "src": "417:235:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "708:166:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6374,
                        "src": "723:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "723:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 252,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4332,
                        "src": "737:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "737:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "723:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 258,
                  "nodeType": "IfStatement",
                  "src": "719:48:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 255,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          6379,
                          6380
                        ],
                        "referencedDeclaration": 6379,
                        "src": "759:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "759:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 257,
                    "nodeType": "ExpressionStatement",
                    "src": "759:8:2"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 259,
                      "name": "ETHUSDSTRING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "778:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 260,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "793:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "778:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "778:21:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "831:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 263,
                      "name": "LogPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "815:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "815:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "EmitStatement",
                  "src": "810:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 268,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "680:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 247,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "694:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "679:29:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:0:2"
            },
            "scope": 351,
            "src": "660:214:2",
            "stateMutability": "nonpayable",
            "superFunction": 1274,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "933:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 274,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6401,
                          "src": "959:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Transaction_$351",
                            "typeString": "contract Transaction"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Transaction_$351",
                            "typeString": "contract Transaction"
                          }
                        ],
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "951:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "951:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "951:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 272,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "944:28:2"
                }
              ]
            },
            "documentation": null,
            "id": 279,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "918:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "917:15:2"
            },
            "scope": 351,
            "src": "880:100:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "1078:411:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1111:5:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 282,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1306,
                          1324
                        ],
                        "referencedDeclaration": 1306,
                        "src": "1093:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1093:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 286,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6401,
                            "src": "1128:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Transaction_$351",
                              "typeString": "contract Transaction"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Transaction_$351",
                              "typeString": "contract Transaction"
                            }
                          ],
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1120:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1120:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1120:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1093:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "1274:208:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1309:55:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer.."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                              }
                            ],
                            "id": 295,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "1289:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1289:76:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 298,
                        "nodeType": "ExpressionStatement",
                        "src": "1289:76:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1395:5:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f76322f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e74",
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1402:67:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              },
                              "value": "json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                                "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                              }
                            ],
                            "id": 299,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1364,
                              1406,
                              1452,
                              1496,
                              1539,
                              1584,
                              1633,
                              1680,
                              1727,
                              1776,
                              1829,
                              1880,
                              1917,
                              1957,
                              2000,
                              2040,
                              2085,
                              2133,
                              2184,
                              2232,
                              2285,
                              2341,
                              2400,
                              2456,
                              2517,
                              2581,
                              2648,
                              2712,
                              2781,
                              2853,
                              2928,
                              3000,
                              3047,
                              3096,
                              3149,
                              3200,
                              3237,
                              3277,
                              3320,
                              3360,
                              3405,
                              3453,
                              3504,
                              3552,
                              3605,
                              3661,
                              3720,
                              3776,
                              3837,
                              3901,
                              3968,
                              4032,
                              4101,
                              4173,
                              4248,
                              4320
                            ],
                            "referencedDeclaration": 1364,
                            "src": "1380:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1380:90:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "1380:90:2"
                      }
                    ]
                  },
                  "id": 305,
                  "nodeType": "IfStatement",
                  "src": "1089:393:2",
                  "trueBody": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "1143:125:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1178:77:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bd8de690da694a5910a0f704ac9ce237e723b5eaad5960da1d2ac575f10c1b1c",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee\""
                              }
                            ],
                            "id": 290,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "1158:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1158:98:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "1158:98:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 307,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1060:2:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1078:0:2"
            },
            "scope": 351,
            "src": "1040:449:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "1571:331:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 314,
                          "name": "eventArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "1585:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_EventDetails_$35_storage_$dyn_storage",
                            "typeString": "struct Event.EventDetails storage ref[] storage ref"
                          }
                        },
                        "id": 316,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 315,
                          "name": "_eventId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 309,
                          "src": "1596:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1585:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EventDetails_$35_storage",
                          "typeString": "struct Event.EventDetails storage ref"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ticketsToSale",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "1585:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1623:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1585:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 347,
                    "nodeType": "Block",
                    "src": "1720:173:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 326,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6374,
                                  "src": "1743:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1743:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 328,
                                "name": "moneyToTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 311,
                                "src": "1756:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1743:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 325,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6377,
                              6378
                            ],
                            "referencedDeclaration": 6377,
                            "src": "1735:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1735:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 331,
                        "nodeType": "ExpressionStatement",
                        "src": "1735:37:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 337,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6374,
                                "src": "1819:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1819:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 332,
                                  "name": "eventArray",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "1787:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_EventDetails_$35_storage_$dyn_storage",
                                    "typeString": "struct Event.EventDetails storage ref[] storage ref"
                                  }
                                },
                                "id": 334,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 333,
                                  "name": "_eventId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "1798:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1787:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EventDetails_$35_storage",
                                  "typeString": "struct Event.EventDetails storage ref"
                                }
                              },
                              "id": 335,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "1787:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "send",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1787:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) returns (bool)"
                            }
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1787:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 340,
                        "nodeType": "ExpressionStatement",
                        "src": "1787:42:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "1844:37:2",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 341,
                                "name": "eventArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "1844:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_EventDetails_$35_storage_$dyn_storage",
                                  "typeString": "struct Event.EventDetails storage ref[] storage ref"
                                }
                              },
                              "id": 343,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 342,
                                "name": "_eventId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "1855:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1844:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EventDetails_$35_storage",
                                "typeString": "struct Event.EventDetails storage ref"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ticketsToSale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "1844:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 346,
                        "nodeType": "ExpressionStatement",
                        "src": "1844:37:2"
                      }
                    ]
                  },
                  "id": 348,
                  "nodeType": "IfStatement",
                  "src": "1582:311:2",
                  "trueBody": {
                    "id": 324,
                    "nodeType": "Block",
                    "src": "1625:81:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "546865726520617265206e6f207469636b65747320617661696c61626c65",
                              "id": 321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1661:32:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f65408936650549185f977dc2294682ad116fe88dd4c6a79fa6d243f056fdc89",
                                "typeString": "literal_string \"There are no tickets available\""
                              },
                              "value": "There are no tickets available"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f65408936650549185f977dc2294682ad116fe88dd4c6a79fa6d243f056fdc89",
                                "typeString": "literal_string \"There are no tickets available\""
                              }
                            ],
                            "id": 320,
                            "name": "LogPriceUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "1645:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1645:49:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 323,
                        "nodeType": "EmitStatement",
                        "src": "1640:54:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 350,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_buyTicket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "name": "_eventId",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "1517:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 311,
                  "name": "moneyToTransfer",
                  "nodeType": "VariableDeclaration",
                  "scope": 350,
                  "src": "1532:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1516:37:2"
            },
            "payable": true,
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1571:0:2"
            },
            "scope": 351,
            "src": "1497:405:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 352,
        "src": "81:1826:2"
      }
    ],
    "src": "0:1907:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x23532a558e182a322650f3c0492f05bf4d9a25da",
      "transactionHash": "0xee492c9e1c465dcaf8dd71ccd79dffffed1425d5984bdd6bb1feffbb911d6b0c"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-02-08T00:58:34.572Z"
}